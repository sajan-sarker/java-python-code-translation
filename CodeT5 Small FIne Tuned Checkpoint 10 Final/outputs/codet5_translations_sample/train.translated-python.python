class TreeNode : NEW_LINE INDENT def __init__ ( self , rootData ) : NEW_LINE INDENT self . val = rootData NEW_LINE self . left = None NEW_LINE self . right = None NEW_LINE DEDENT DEDENT class Solution ( object ) : NEW_LINE INDENT def convertBST ( self , root ) : NEW_LINE INDENT sum = 0 NEW_LINE node = root NEW_LINE stack = [ ] NEW_LINE while ( len ( stack ) != 0 or node != None ) : NEW_LINE INDENT while ( node != None ) : NEW_LINE INDENT stack . append ( node ) NEW_LINE node = node . right NEW_LINE DEDENT node = stack . pop ( ) NEW_LINE sum += node . val NEW_LINE node . val = sum NEW_LINE node = node . left NEW_LINE DEDENT return root NEW_LINE DEDENT def printTree_vLR ( self , node , arr ) : NEW_LINE INDENT if ( node != None ) : NEW_LINE INDENT arr . append ( node . val ) NEW_LINE arr = printTree_vLR ( node . left , arr ) NEW_LINE arr = printTree_vLR ( node . right ,
def countTriplets ( n , points ) : NEW_LINE INDENT pts = set ( ) NEW_LINE ct = 0 NEW_LINE for i in range ( n ) : NEW_LINE INDENT pts . add ( points [ i ] ) NEW_LINE DEDENT for i in range ( n ) : NEW_LINE INDENT for j in range ( i + 1 , n ) : NEW_LINE INDENT x = points [ i ] [ 0 ] + points [ j ] [ 1 ] NEW_LINE y = points [ i ] [ 1 ] + points [ j ] [ 2 ] NEW_LINE if ( x % 2 == 0 and y % 2 == 0 ) : NEW_LINE INDENT if ( not pts . add ( ( x // 2 , y // 2 ) ) ) : NEW_LINE INDENT ct += 1 NEW_LINE DEDENT DEDENT DEDENT DEDENT return ct NEW_LINE DEDENT points = [ [ 1 , 1 ] , [ 2 , 2 ] , [ 3 , 3 ] ] NEW_LINE n = len ( points ) NEW_LINE print ( countTriplets ( n , points ) ) NEW_LINE
def isSumDivides ( N ) : NEW_LINE INDENT temp = N NEW_LINE sum = 0 NEW_LINE while ( temp > 0 ) : NEW_LINE INDENT sum += temp % 10 NEW_LINE temp = int ( temp / 10 ) NEW_LINE DEDENT if ( N % sum == 0 ) : NEW_LINE INDENT return 1 NEW_LINE DEDENT else : NEW_LINE INDENT return 0 NEW_LINE DEDENT DEDENT N = 12 NEW_LINE if ( isSumDivides ( N ) ) : NEW_LINE INDENT print ( " YES " ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( " NO " ) NEW_LINE DEDENT
def countZeros ( x ) : NEW_LINE INDENT n = 32 NEW_LINE y = x >> 16 NEW_LINE if ( y != 0 ) : NEW_LINE INDENT n = n - 16 NEW_LINE x = y NEW_LINE DEDENT y = x >> 8 NEW_LINE if ( y != 0 ) : NEW_LINE INDENT n = n - 8 NEW_LINE x = y NEW_LINE DEDENT y = x >> 4 NEW_LINE if ( y != 0 ) : NEW_LINE INDENT n = n - 4 NEW_LINE x = y NEW_LINE DEDENT y = x >> 2 NEW_LINE if ( y != 0 ) : NEW_LINE INDENT n = n - 2 NEW_LINE x = y NEW_LINE DEDENT y = x >> 1 NEW_LINE if ( y != 0 ) : NEW_LINE INDENT return n - 2 NEW_LINE DEDENT return n - x NEW_LINE DEDENT x = 101 NEW_LINE print ( countZeros ( x ) ) NEW_LINE
import datetime NEW_LINE while True : NEW_LINE INDENT s = input ( ) NEW_LINE if s == "0" : NEW_LINE INDENT break NEW_LINE DEDENT s = s . split ( " ▁ " ) NEW_LINE if int ( s [ 0 ] ) - 1 == int ( s [ 1 ] ) : NEW_LINE INDENT print ( int ( s [ 0 ] ) - 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( int ( s [ 1 ] ) - 1 ) NEW_LINE DEDENT DEDENT
import datetime NEW_LINE while True : NEW_LINE INDENT s = input ( ) NEW_LINE if s == "0" : NEW_LINE INDENT break NEW_LINE DEDENT s = s . split ( " ▁ " ) NEW_LINE if int ( s [ 0 ] ) - 1 == int ( s [ 1 ] ) : NEW_LINE INDENT print ( int ( s [ 0 ] ) - 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( int ( s [ 1 ] ) - 1 ) NEW_LINE DEDENT DEDENT
import datetime NEW_LINE while True : NEW_LINE INDENT s = input ( ) NEW_LINE if s == "0" : NEW_LINE INDENT break NEW_LINE DEDENT s = s . split ( " ▁ " ) NEW_LINE if int ( s [ 0 ] ) - 1 == int ( s [ 1 ] ) : NEW_LINE INDENT print ( int ( s [ 0 ] ) - 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( int ( s [ 1 ] ) - 1 ) NEW_LINE DEDENT DEDENT
import datetime NEW_LINE while True : NEW_LINE INDENT s = input ( ) NEW_LINE if s == "0" : NEW_LINE INDENT break NEW_LINE DEDENT s = s . split ( " ▁ " ) NEW_LINE if int ( s [ 0 ] ) - 1 == int ( s [ 1 ] ) : NEW_LINE INDENT print ( int ( s [ 0 ] ) - 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( int ( s [ 1 ] ) - 1 ) NEW_LINE DEDENT DEDENT
import datetime NEW_LINE while True : NEW_LINE INDENT s = input ( ) NEW_LINE if s == "0" : NEW_LINE INDENT break NEW_LINE DEDENT s = s . split ( " ▁ " ) NEW_LINE if int ( s [ 0 ] ) - 1 == int ( s [ 1 ] ) : NEW_LINE INDENT print ( int ( s [ 0 ] ) - 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( int ( s [ 1 ] ) - 1 ) NEW_LINE DEDENT DEDENT
while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 1 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 5 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 6 : NEW_LINE INDENT print ( " Sunday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Sunday " ) NEW
while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 1 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 5 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 6 : NEW_LINE INDENT print ( " Sunday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Sunday " ) NEW
while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 1 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 5 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 6 : NEW_LINE INDENT print ( " Sunday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Sunday " ) NEW
while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 1 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 5 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 6 : NEW_LINE INDENT print ( " Sunday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Sunday " ) NEW
while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 1 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 5 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 6 : NEW_LINE INDENT print ( " Sunday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 7 : NEW_LINE INDENT print ( " Sunday " ) NEW
import sys NEW_LINE from sys import stdin NEW_LINE input = stdin . readline NEW_LINE def main ( args ) : NEW_LINE INDENT while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 0 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif m == 1 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT DEDENT DEDENT if __name__ == " _ _ main _ _ " : NEW_LINE INDENT main ( sys . argv [ 1 : ] ) NEW_LINE DEDENT
import sys NEW_LINE from sys import stdin NEW_LINE input = stdin . readline NEW_LINE def main ( args ) : NEW_LINE INDENT while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 0 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif m == 1 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT DEDENT DEDENT if __name__ == " _ _ main _ _ " : NEW_LINE INDENT main ( sys . argv [ 1 : ] ) NEW_LINE DEDENT
import sys NEW_LINE from sys import stdin NEW_LINE input = stdin . readline NEW_LINE def main ( args ) : NEW_LINE INDENT while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 0 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif m == 1 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT DEDENT DEDENT if __name__ == " _ _ main _ _ " : NEW_LINE INDENT main ( sys . argv [ 1 : ] ) NEW_LINE DEDENT
import sys NEW_LINE from sys import stdin NEW_LINE input = stdin . readline NEW_LINE def main ( args ) : NEW_LINE INDENT while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 0 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif m == 1 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT DEDENT DEDENT if __name__ == " _ _ main _ _ " : NEW_LINE INDENT main ( sys . argv [ 1 : ] ) NEW_LINE DEDENT
import sys NEW_LINE from sys import stdin NEW_LINE input = stdin . readline NEW_LINE def main ( args ) : NEW_LINE INDENT while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if d == 0 : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT elif m == 1 : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif d == 2 : NEW_LINE INDENT print ( " Friday " ) NEW_LINE DEDENT elif d == 3 : NEW_LINE INDENT print ( " Saturday " ) NEW_LINE DEDENT elif d == 4 : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( " Wednesday " ) NEW_LINE DEDENT DEDENT DEDENT if __name__ == " _ _ main _ _ " : NEW_LINE INDENT main ( sys . argv [ 1 : ] ) NEW_LINE DEDENT
import datetime NEW_LINE while True : NEW_LINE INDENT m , n = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if n == 1 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 2 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 3 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 4 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 5 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 6 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 7 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 9 : NEW_LINE
import datetime NEW_LINE while True : NEW_LINE INDENT m , n = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if n == 1 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 2 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 3 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 4 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 5 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 6 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 7 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 9 : NEW_LINE
import datetime NEW_LINE while True : NEW_LINE INDENT m , n = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if n == 1 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 2 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 3 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 4 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 5 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 6 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 7 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 9 : NEW_LINE
import datetime NEW_LINE while True : NEW_LINE INDENT m , n = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if n == 1 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 2 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 3 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 4 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 5 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 6 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 7 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 9 : NEW_LINE
import datetime NEW_LINE while True : NEW_LINE INDENT m , n = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if n == 1 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 2 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 3 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 4 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 5 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 6 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 7 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 8 : NEW_LINE INDENT print ( "01" ) NEW_LINE DEDENT elif n == 9 : NEW_LINE
import datetime NEW_LINE while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 and d == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1
import datetime NEW_LINE while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 and d == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1
import datetime NEW_LINE while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 and d == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1
import datetime NEW_LINE while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 and d == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1
import datetime NEW_LINE while True : NEW_LINE INDENT m , d = map ( int , input ( ) . split ( ) ) NEW_LINE if m == 0 and d == 0 : NEW_LINE INDENT break NEW_LINE DEDENT if datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Monday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Tuesday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) == datetime . datetime ( 2004 , m - 1 , d ) : NEW_LINE INDENT print ( " Thursday " ) NEW_LINE DEDENT elif datetime . datetime ( 2004 , m - 1
import sys NEW_LINE input = sys . stdin . readline NEW_LINE def main ( ) : NEW_LINE INDENT s = input ( ) NEW_LINE ans = 0 NEW_LINE for i in range ( len ( s ) - 1 ) : NEW_LINE INDENT if s [ i ] == '1' : NEW_LINE INDENT ans += 1 NEW_LINE DEDENT DEDENT print ( ans ) NEW_LINE DEDENT if __name__ == ' _ _ main _ _ ' : NEW_LINE INDENT main ( ) NEW_LINE DEDENT
import sys NEW_LINE input = sys . stdin . readline NEW_LINE def main ( ) : NEW_LINE INDENT s = input ( ) NEW_LINE ans = 0 NEW_LINE for i in range ( len ( s ) - 1 ) : NEW_LINE INDENT if s [ i ] == '1' : NEW_LINE INDENT ans += 1 NEW_LINE DEDENT DEDENT print ( ans ) NEW_LINE DEDENT if __name__ == ' _ _ main _ _ ' : NEW_LINE INDENT main ( ) NEW_LINE DEDENT
import sys NEW_LINE input = sys . stdin . readline NEW_LINE def main ( ) : NEW_LINE INDENT s = input ( ) NEW_LINE ans = 0 NEW_LINE for i in range ( len ( s ) - 1 ) : NEW_LINE INDENT if s [ i ] == '1' : NEW_LINE INDENT ans += 1 NEW_LINE DEDENT DEDENT print ( ans ) NEW_LINE DEDENT if __name__ == ' _ _ main _ _ ' : NEW_LINE INDENT main ( ) NEW_LINE DEDENT
import sys NEW_LINE input = sys . stdin . readline NEW_LINE def main ( ) : NEW_LINE INDENT s = input ( ) NEW_LINE ans = 0 NEW_LINE for i in range ( len ( s ) - 1 ) : NEW_LINE INDENT if s [ i ] == '1' : NEW_LINE INDENT ans += 1 NEW_LINE DEDENT DEDENT print ( ans ) NEW_LINE DEDENT if __name__ == ' _ _ main _ _ ' : NEW_LINE INDENT main ( ) NEW_LINE DEDENT
import sys NEW_LINE input = sys . stdin . readline NEW_LINE def main ( ) : NEW_LINE INDENT s = input ( ) NEW_LINE ans = 0 NEW_LINE for i in range ( len ( s ) - 1 ) : NEW_LINE INDENT if s [ i ] == '1' : NEW_LINE INDENT ans += 1 NEW_LINE DEDENT DEDENT print ( ans ) NEW_LINE DEDENT if __name__ == ' _ _ main _ _ ' : NEW_LINE INDENT main ( ) NEW_LINE DEDENT
s = input ( ) NEW_LINE n = len ( s ) NEW_LINE if n % 2 == 0 : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT
s = input ( ) NEW_LINE n = len ( s ) NEW_LINE if n % 2 == 0 : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT
s = input ( ) NEW_LINE n = len ( s ) NEW_LINE if n % 2 == 0 : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT
s = input ( ) NEW_LINE n = len ( s ) NEW_LINE if n % 2 == 0 : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT
s = input ( ) NEW_LINE n = len ( s ) NEW_LINE if n % 2 == 0 : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT
s = input ( ) NEW_LINE n = len ( s ) NEW_LINE if n == 1 : NEW_LINE INDENT print ( 0 ) NEW_LINE DEDENT elif n == 2 : NEW_LINE INDENT print ( 1 ) NEW_LINE DEDENT elif n == 3 : NEW_LINE INDENT print ( 1 ) NEW_LINE DEDENT elif n == 0 : NEW_LINE INDENT print ( 0 ) NEW_LINE DEDENT elif n == 1 : NEW_LINE INDENT print ( 1 ) NEW_LINE DEDENT elif n == 2 : NEW_LINE INDENT print ( ( n - 1 ) // 2 + 1 ) NEW_LINE DEDENT elif n == 3 : NEW_LINE INDENT print ( ( n - 2 ) // 2 + 1 ) NEW_LINE DEDENT else : NEW_LINE INDENT print ( ( n - 2 ) // 2 + 1 ) NEW_LINE DEDENT